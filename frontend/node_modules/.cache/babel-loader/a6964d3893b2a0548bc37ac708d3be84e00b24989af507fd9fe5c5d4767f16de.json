{"ast":null,"code":"import _classCallCheck from\"C:/Users/puchkov/Documents/GitHub/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/puchkov/Documents/GitHub/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var url=_ref.url,headers=_ref.headers;_classCallCheck(this,Api);this._url=url;this._headers=headers;}//Проверка\n_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u0423 \\u043D\\u0430\\u0441 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}//Данные пользователя\n},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(this._url+'/users/me',{method:'GET',headers:this._headers}).then(this._checkResponse);}//Обновление данных пользователя\n},{key:\"updateUserInfo\",value:function updateUserInfo(userData){return fetch(this._url+'/users/me',{method:'PATCH',headers:this._headers,body:JSON.stringify({name:userData.name,about:userData.occupation})}).then(this._checkResponse);}//Обновление аватара пользователя\n},{key:\"updateUserAvatar\",value:function updateUserAvatar(_ref2){var avatar=_ref2.avatar;return fetch(this._url+'/users/me/avatar',{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:avatar})}).then(this._checkResponse);}//Начальные карточки\n},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(this._url+'/cards',{method:'GET',headers:this._headers}).then(this._checkResponse);}//Добавление карточки\n},{key:\"addCard\",value:function addCard(cardData){return fetch(this._url+'/cards',{method:'POST',headers:this._headers,body:JSON.stringify({name:cardData.name,link:cardData.link})}).then(this._checkResponse);}//Удаление карточки\n},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(this._url+\"/cards/\".concat(cardId),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}//Like карточки\n},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){if(isLiked){return fetch(this._url+\"/cards/\".concat(cardId,\"/likes\"),{method:'PUT',headers:this._headers}).then(this._checkResponse);}else{return fetch(this._url+\"/cards/\".concat(cardId,\"/likes\"),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}}}]);return Api;}();var api=new Api({url:'https://api.rerasmesto.students.nomoredomains.monster',headers:{authorization:'a4314974-bcc2-444b-805d-7948fe80c06f','content-type':'application/json'}});export default api;","map":{"version":3,"names":["Api","_ref","url","headers","_classCallCheck","_url","_headers","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","concat","status","getUserInfo","fetch","method","then","updateUserInfo","userData","body","JSON","stringify","name","about","occupation","updateUserAvatar","_ref2","avatar","getInitialCards","addCard","cardData","link","deleteCard","cardId","changeLikeCardStatus","isLiked","api","authorization"],"sources":["C:/Users/puchkov/documents/github/react-mesto-api-full-gha/frontend/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor({url, headers}) {\r\n    this._url = url;\r\n    this._headers = headers;\r\n  }\r\n\r\n  //Проверка\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`У нас ошибка ${res.status}`);\r\n  }\r\n\r\n  //Данные пользователя\r\n  getUserInfo() {\r\n    return fetch(this._url + '/users/me', {\r\n      method: 'GET',\r\n      headers: this._headers\r\n    })\r\n    .then(this._checkResponse);\r\n  }\r\n\r\n  //Обновление данных пользователя\r\n  updateUserInfo(userData) {\r\n    return fetch(this._url + '/users/me', {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: userData.name,\r\n        about: userData.occupation\r\n      })\r\n    })\r\n    .then(this._checkResponse);\r\n  }\r\n\r\n  //Обновление аватара пользователя\r\n  updateUserAvatar({avatar}) {\r\n    return fetch(this._url + '/users/me/avatar', {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar,\r\n      })\r\n    })\r\n    .then(this._checkResponse);\r\n  }\r\n\r\n  //Начальные карточки\r\n  getInitialCards(){\r\n    return fetch(this._url + '/cards', {\r\n      method: 'GET',\r\n      headers: this._headers\r\n    })\r\n    .then(this._checkResponse);\r\n  }\r\n\r\n  //Добавление карточки\r\n  addCard(cardData) {\r\n    return fetch(this._url + '/cards', {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: cardData.name,\r\n        link: cardData.link\r\n      })\r\n    })\r\n    .then(this._checkResponse);\r\n  }\r\n\r\n  //Удаление карточки\r\n  deleteCard(cardId) {\r\n    return fetch(this._url + `/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse);\r\n  }\r\n\r\n  //Like карточки\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n  if(isLiked) {\r\n    return fetch(this._url + `/cards/${cardId}/likes`, {\r\n      method: 'PUT',\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse);\r\n    } else {\r\n    return fetch(this._url + `/cards/${cardId}/likes`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse);\r\n    }\r\n  }\r\n}\r\n\r\nconst api = new Api ({\r\n  url: 'https://api.rerasmesto.students.nomoredomains.monster',\r\n  headers: {\r\n    authorization: 'a4314974-bcc2-444b-805d-7948fe80c06f',\r\n    'content-type': 'application/json'\r\n  },\r\n});\r\n\r\nexport default api;"],"mappings":"+OAAM,CAAAA,GAAG,yBACP,SAAAA,IAAAC,IAAA,CAA4B,IAAf,CAAAC,GAAG,CAAAD,IAAA,CAAHC,GAAG,CAAEC,OAAO,CAAAF,IAAA,CAAPE,OAAO,CAAAC,eAAA,MAAAJ,GAAA,EACvB,IAAI,CAACK,IAAI,CAAGH,GAAG,CACf,IAAI,CAACI,QAAQ,CAAGH,OAAO,CACzB,CAEA;AAAAI,YAAA,CAAAP,GAAA,GAAAQ,GAAA,kBAAAC,KAAA,CACA,SAAAC,eAAeC,GAAG,CAAE,CAClB,GAAIA,GAAG,CAACC,EAAE,CAAE,CACV,MAAO,CAAAD,GAAG,CAACE,IAAI,CAAC,CAAC,CACnB,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,mEAAAC,MAAA,CAAiBL,GAAG,CAACM,MAAM,CAAE,CAAC,CACrD,CAEA;AAAA,GAAAT,GAAA,eAAAC,KAAA,CACA,SAAAS,YAAA,CAAc,CACZ,MAAO,CAAAC,KAAK,CAAC,IAAI,CAACd,IAAI,CAAG,WAAW,CAAE,CACpCe,MAAM,CAAE,KAAK,CACbjB,OAAO,CAAE,IAAI,CAACG,QAChB,CAAC,CAAC,CACDe,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC,CAC5B,CAEA;AAAA,GAAAF,GAAA,kBAAAC,KAAA,CACA,SAAAa,eAAeC,QAAQ,CAAE,CACvB,MAAO,CAAAJ,KAAK,CAAC,IAAI,CAACd,IAAI,CAAG,WAAW,CAAE,CACpCe,MAAM,CAAE,OAAO,CACfjB,OAAO,CAAE,IAAI,CAACG,QAAQ,CACtBkB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,IAAI,CAAEJ,QAAQ,CAACI,IAAI,CACnBC,KAAK,CAAEL,QAAQ,CAACM,UAClB,CAAC,CACH,CAAC,CAAC,CACDR,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC,CAC5B,CAEA;AAAA,GAAAF,GAAA,oBAAAC,KAAA,CACA,SAAAqB,iBAAAC,KAAA,CAA2B,IAAT,CAAAC,MAAM,CAAAD,KAAA,CAANC,MAAM,CACtB,MAAO,CAAAb,KAAK,CAAC,IAAI,CAACd,IAAI,CAAG,kBAAkB,CAAE,CAC3Ce,MAAM,CAAE,OAAO,CACfjB,OAAO,CAAE,IAAI,CAACG,QAAQ,CACtBkB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBM,MAAM,CAANA,MACF,CAAC,CACH,CAAC,CAAC,CACDX,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC,CAC5B,CAEA;AAAA,GAAAF,GAAA,mBAAAC,KAAA,CACA,SAAAwB,gBAAA,CAAiB,CACf,MAAO,CAAAd,KAAK,CAAC,IAAI,CAACd,IAAI,CAAG,QAAQ,CAAE,CACjCe,MAAM,CAAE,KAAK,CACbjB,OAAO,CAAE,IAAI,CAACG,QAChB,CAAC,CAAC,CACDe,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC,CAC5B,CAEA;AAAA,GAAAF,GAAA,WAAAC,KAAA,CACA,SAAAyB,QAAQC,QAAQ,CAAE,CAChB,MAAO,CAAAhB,KAAK,CAAC,IAAI,CAACd,IAAI,CAAG,QAAQ,CAAE,CACjCe,MAAM,CAAE,MAAM,CACdjB,OAAO,CAAE,IAAI,CAACG,QAAQ,CACtBkB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,IAAI,CAAEQ,QAAQ,CAACR,IAAI,CACnBS,IAAI,CAAED,QAAQ,CAACC,IACjB,CAAC,CACH,CAAC,CAAC,CACDf,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC,CAC5B,CAEA;AAAA,GAAAF,GAAA,cAAAC,KAAA,CACA,SAAA4B,WAAWC,MAAM,CAAE,CACjB,MAAO,CAAAnB,KAAK,CAAC,IAAI,CAACd,IAAI,WAAAW,MAAA,CAAasB,MAAM,CAAE,CAAE,CAC3ClB,MAAM,CAAE,QAAQ,CAChBjB,OAAO,CAAE,IAAI,CAACG,QAChB,CAAC,CAAC,CACDe,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC,CAC5B,CAEA;AAAA,GAAAF,GAAA,wBAAAC,KAAA,CACA,SAAA8B,qBAAqBD,MAAM,CAAEE,OAAO,CAAE,CACtC,GAAGA,OAAO,CAAE,CACV,MAAO,CAAArB,KAAK,CAAC,IAAI,CAACd,IAAI,WAAAW,MAAA,CAAasB,MAAM,UAAQ,CAAE,CACjDlB,MAAM,CAAE,KAAK,CACbjB,OAAO,CAAE,IAAI,CAACG,QAChB,CAAC,CAAC,CACDe,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC,CAC1B,CAAC,IAAM,CACP,MAAO,CAAAS,KAAK,CAAC,IAAI,CAACd,IAAI,WAAAW,MAAA,CAAasB,MAAM,UAAQ,CAAE,CACjDlB,MAAM,CAAE,QAAQ,CAChBjB,OAAO,CAAE,IAAI,CAACG,QAChB,CAAC,CAAC,CACDe,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC,CAC1B,CACF,CAAC,WAAAV,GAAA,KAGH,GAAM,CAAAyC,GAAG,CAAG,GAAI,CAAAzC,GAAG,CAAE,CACnBE,GAAG,CAAE,uDAAuD,CAC5DC,OAAO,CAAE,CACPuC,aAAa,CAAE,sCAAsC,CACrD,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,cAAe,CAAAD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}