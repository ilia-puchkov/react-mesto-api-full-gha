{"ast":null,"code":"import _classCallCheck from\"C:/Users/puchkov/Documents/GitHub/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/puchkov/Documents/GitHub/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var url=_ref.url,headers=_ref.headers;_classCallCheck(this,Api);this._url=url;this._headers=headers;}//Проверка\n_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u0423 \\u043D\\u0430\\u0441 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}//Данные пользователя\n},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(this._url+'/users/me',{method:'GET',headers:this._headers}).then(this._checkResponse);}//Обновление данных пользователя\n},{key:\"updateUserInfo\",value:function updateUserInfo(userData){return fetch(this._url+'/users/me',{method:'PATCH',headers:this._headers,body:JSON.stringify({name:userData.name,about:userData.occupation})}).then(this._checkResponse);}//Обновление аватара пользователя\n},{key:\"updateUserAvatar\",value:function updateUserAvatar(_ref2){var avatar=_ref2.avatar;return fetch(this._url+'/users/me/avatar',{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:avatar})}).then(this._checkResponse);}//Начальные карточки\n},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(this._url+'/cards',{method:'GET',headers:this._headers}).then(this._checkResponse);}//Добавление карточки\n},{key:\"addCard\",value:function addCard(cardData){return fetch(this._url+'/cards',{method:'POST',headers:this._headers,body:JSON.stringify({name:cardData.name,link:cardData.link})}).then(this._checkResponse);}//Удаление карточки\n},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(this._url+\"/cards/\".concat(cardId),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}//Like карточки\n},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){if(isLiked){return fetch(this._url+\"/cards/\".concat(cardId,\"/likes\"),{method:'PUT',headers:this._headers}).then(this._checkResponse);}else{return fetch(this._url+\"/cards/\".concat(cardId,\"/likes\"),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}}}]);return Api;}();var api=new Api({url:'https://api.rerasmesto.students.nomoredomains.monster',headers:{//authorization: `Bearer ${localStorage.getItem('jwt')}`,\n'content-type':'application/json'}});export default api;","map":{"version":3,"names":["Api","url","headers","_url","_headers","res","ok","json","Promise","reject","status","fetch","method","then","_checkResponse","userData","body","JSON","stringify","name","about","occupation","avatar","cardData","link","cardId","isLiked","api"],"sources":["C:/Users/puchkov/documents/github/react-mesto-api-full-gha/frontend/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor({url, headers}) {\r\n    this._url = url;\r\n    this._headers = headers;\r\n  }\r\n\r\n  //Проверка\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`У нас ошибка ${res.status}`);\r\n  }\r\n\r\n  //Данные пользователя\r\n  getUserInfo() {\r\n    return fetch(this._url + '/users/me', {\r\n      method: 'GET',\r\n      headers: this._headers\r\n    })\r\n    .then(this._checkResponse);\r\n  }\r\n\r\n  //Обновление данных пользователя\r\n  updateUserInfo(userData) {\r\n    return fetch(this._url + '/users/me', {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: userData.name,\r\n        about: userData.occupation\r\n      })\r\n    })\r\n    .then(this._checkResponse);\r\n  }\r\n\r\n  //Обновление аватара пользователя\r\n  updateUserAvatar({avatar}) {\r\n    return fetch(this._url + '/users/me/avatar', {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar,\r\n      })\r\n    })\r\n    .then(this._checkResponse);\r\n  }\r\n\r\n  //Начальные карточки\r\n  getInitialCards(){\r\n    return fetch(this._url + '/cards', {\r\n      method: 'GET',\r\n      headers: this._headers\r\n    })\r\n    .then(this._checkResponse);\r\n  }\r\n\r\n  //Добавление карточки\r\n  addCard(cardData) {\r\n    return fetch(this._url + '/cards', {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: cardData.name,\r\n        link: cardData.link\r\n      })\r\n    })\r\n    .then(this._checkResponse);\r\n  }\r\n\r\n  //Удаление карточки\r\n  deleteCard(cardId) {\r\n    return fetch(this._url + `/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse);\r\n  }\r\n\r\n  //Like карточки\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n  if(isLiked) {\r\n    return fetch(this._url + `/cards/${cardId}/likes`, {\r\n      method: 'PUT',\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse);\r\n    } else {\r\n    return fetch(this._url + `/cards/${cardId}/likes`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse);\r\n    }\r\n  }\r\n}\r\n\r\nconst api = new Api ({\r\n  url: 'https://api.rerasmesto.students.nomoredomains.monster',\r\n  headers: {\r\n    //authorization: `Bearer ${localStorage.getItem('jwt')}`,\r\n    'content-type': 'application/json'\r\n  },\r\n});\r\n\r\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}