{"ast":null,"code":"class Authorization {\n  constructor(_ref) {\n    let {\n      baseUrl\n    } = _ref;\n    this._url = baseUrl;\n  }\n\n  // Проверка\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`У нас ошибка ${res.status}`);\n  }\n\n  // Регистрация\n  register(data) {\n    return fetch(this._url + \"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: data.email,\n        password: data.password\n      })\n    }).then(this._checkResponse);\n  }\n\n  // Авторизация\n  login(data) {\n    return fetch(this._url + \"/signin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: data.email,\n        password: data.password\n      })\n    }).then(this._checkResponse);\n  }\n\n  // Проверка токена\n  checkToken(token) {\n    return fetch(this._url + \"/users/me\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(this._checkResponse);\n  }\n}\nconst auth = new Authorization({\n  baseUrl: \"https://api.rerasmesto.students.nomoredomains.monster\"\n});\nexport default auth;","map":{"version":3,"names":["Authorization","constructor","baseUrl","_url","_checkResponse","res","ok","json","Promise","reject","status","register","data","fetch","method","headers","body","JSON","stringify","email","password","then","login","checkToken","token","auth"],"sources":["C:/Users/reras/documents/github/react-mesto-api-full-gha/frontend/src/utils/Authorization.js"],"sourcesContent":["class Authorization {\r\n  constructor({ baseUrl }) {\r\n    this._url = baseUrl;\r\n  }\r\n\r\n  // Проверка\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`У нас ошибка ${res.status}`);\r\n  }\r\n\r\n  // Регистрация\r\n  register(data) {\r\n    return fetch(this._url + \"/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email: data.email, password: data.password }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  // Авторизация\r\n  login(data) {\r\n    return fetch(this._url + \"/signin\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email: data.email, password: data.password }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  // Проверка токена\r\n  checkToken(token) {\r\n    return fetch(this._url + \"/users/me\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then(this._checkResponse);\r\n  }\r\n}\r\n\r\nconst auth = new Authorization({\r\n  baseUrl: \"https://api.rerasmesto.students.nomoredomains.monster\",\r\n});\r\n\r\nexport default auth;\r\n"],"mappings":"AAAA,MAAMA,aAAa,CAAC;EAClBC,WAAW,OAAc;IAAA,IAAb;MAAEC;IAAQ,CAAC;IACrB,IAAI,CAACC,IAAI,GAAGD,OAAO;EACrB;;EAEA;EACAE,cAAc,CAACC,GAAG,EAAE;IAClB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,EAAE;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,gBAAeJ,GAAG,CAACK,MAAO,EAAC,CAAC;EACrD;;EAEA;EACAC,QAAQ,CAACC,IAAI,EAAE;IACb,OAAOC,KAAK,CAAC,IAAI,CAACV,IAAI,GAAG,SAAS,EAAE;MAClCW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAEP,IAAI,CAACO,KAAK;QAAEC,QAAQ,EAAER,IAAI,CAACQ;MAAS,CAAC;IACrE,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAACjB,cAAc,CAAC;EAC9B;;EAEA;EACAkB,KAAK,CAACV,IAAI,EAAE;IACV,OAAOC,KAAK,CAAC,IAAI,CAACV,IAAI,GAAG,SAAS,EAAE;MAClCW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAEP,IAAI,CAACO,KAAK;QAAEC,QAAQ,EAAER,IAAI,CAACQ;MAAS,CAAC;IACrE,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAACjB,cAAc,CAAC;EAC9B;;EAEA;EACAmB,UAAU,CAACC,KAAK,EAAE;IAChB,OAAOX,KAAK,CAAC,IAAI,CAACV,IAAI,GAAG,WAAW,EAAE;MACpCW,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCf,aAAa,EAAG,UAASwB,KAAM;MACjC;IACF,CAAC,CAAC,CAACH,IAAI,CAAC,IAAI,CAACjB,cAAc,CAAC;EAC9B;AACF;AAEA,MAAMqB,IAAI,GAAG,IAAIzB,aAAa,CAAC;EAC7BE,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,eAAeuB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}